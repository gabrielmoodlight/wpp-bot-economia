const { Client, LocalAuth } = require('whatsapp-web.js');
const { GoogleSpreadsheet } = require('google-spreadsheet');
// const schedule = require('node-schedule');
const qrcode = require('qrcode-terminal');
const { JWT } = require('google-auth-library');
const creds = JSON.parse(process.env.GOOGLE_CREDENTIALS_JSON);
const SHEET_ID = '1qL3Vw5dDvHlXTXPohfnUAOT9Ua7DtBzcMzPfv1uQl2M'; 

const client = new Client({ authStrategy: new LocalAuth() });

// schedule.scheduleJob('59 23 * * *', async function () {
//   const resumo = await gerarResumoDoDia();
//   const grupo = await client.getChatById('ID_DO_GRUPO');
//   grupo.sendMessage(resumo);
// });

const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: creds.client_email,
  key: creds.private_key,
  scopes: ['https://www.googleapis.com/auth/spreadsheets'],
});

async function adicionarLinha(dados) {
  const doc = new GoogleSpreadsheet(SHEET_ID, serviceAccountAuth);

  await doc.loadInfo();
  console.log(doc.title);

  const sheet = doc.sheetsByIndex[0];
  console.log(sheet.title);
  
  await sheet.addRow(dados);
}

client.on('qr', (qr) => {
  console.log('QR RECEIVED', qr);
  qrcode.generate(qr, { small: true });
});

client.once('ready', () => {
  console.log('Client is ready!');
});

client.on('message_create', async (msg) => {
    const text = msg.body.toLowerCase();
    const regex = /^(\d*[\.|\,]?\d+)\s(\w*)\s(pix|dinheiro|cc|vr|va)$/;
    const match = text.match(regex);

    if (match) {
      console.log('Match', match);
      const [_, valor, descricao, metodo] = match;
      const data = new Date().toLocaleString();
      // Aqui você pode chamar a função para adicionar a linha no Google Sheets
      await adicionarLinha({ data, valor, descricao, metodo });
      console.log(`Dados armazenados: ${data}, ${valor}, ${descricao}, ${metodo}`);
    }
});

client.initialize();